version: "3.3"
services:
  # Test validity of liquidsoap configuration
  liquidsoap-test:
    command:
    - -c
    - /conf/test.liq
    - /scripts/00-live.liq
    container_name: liquidsoap-test
    image: savonet/liquidsoap:rolling-release-v2.2.x
    networks:
    - default
    volumes:
    - ./tests/liquidsoap/:/conf/:ro
    - ./scripts/:/scripts/:ro

  # Run liquidsoap and create "myradio" stream
  liquidsoap-myradio:
    command:
    - /conf/myradio.liq
    - /scripts/00-live.liq
    container_name: liquidsoap-myradio
    image: savonet/liquidsoap:rolling-release-v2.2.x
    networks:
    - default
    restart: unless-stopped
    ports:
    - 6001:6001/tcp
    - 7000:7000/tcp
    - 10000:10000/tcp
    - 10001:10001/tcp
    - 10002:10002/tcp
    - 10003:10003/tcp
    - 10004:10004/tcp
    - 10005:10005/tcp
    - 10006:10006/tcp
    volumes:
    - ./example/liquidsoap/:/conf/:ro
    - ./scripts/:/scripts/:ro
    - data_hls:/tmp/
    - data_liquidsoap:/state/

  # Feed liquidsoap with an example SRT source (https://modular-station.com/)
  source-voieA-caller1:
    command:
    - /usr/bin/ffmpeg
    - -hide_banner
    - -re
    - -i
    - "https://broadcast.modular-station.com/listen/modular_station/radio.aac?id=github.com_radiofrance_rf-liquidsoap"
    - -vn
    - -f
    - wav
    - -codec:a
    - pcm_s16le
    - "srt://liquidsoap-myradio:10000" # voieA_caller1
    container_name: source-voieA-caller1
    entrypoint: []
    image: savonet/liquidsoap:rolling-release-v2.2.x
    networks:
    - default
    restart: unless-stopped

  # Feed liquidsoap with an example SRT source (https://p-node.org/)
  source-voieB-caller1:
    command:
    - /usr/bin/ffmpeg
    - -hide_banner
    - -re
    - -i
    - "https://stream.p-node.org/pnode.mp3?id=github.com_radiofrance_rf-liquidsoap"
    - -vn
    - -f
    - wav
    - -codec:a
    - pcm_s16le
    - "srt://liquidsoap-myradio:10002" # voieB_caller1
    container_name: source-voieB-caller1
    entrypoint: []
    image: savonet/liquidsoap:rolling-release-v2.2.x
    networks:
    - default
    restart: unless-stopped

  # Feed liquidsoap with an example SRT source (https://datafruits.fm)
  source-override-caller1:
    command:
    - /usr/bin/ffmpeg
    - -hide_banner
    - -re
    - -i
    - "https://streampusher-relay.club/datafruits.mp3?id=github.com_radiofrance_rf-liquidsoap"
    - -vn
    - -f
    - wav
    - -codec:a
    - pcm_s16le
    - "srt://liquidsoap-myradio:10004" # override_caller1
    container_name: source-override-caller1
    entrypoint: []
    image: savonet/liquidsoap:rolling-release-v2.2.x
    networks:
    - default
    restart: unless-stopped

  # Streaming services: icecast
  icecast:
    container_name: icecast
    environment:
    - ICECAST_SOURCE_PASSWORD=secret
    - ICECAST_ADMIN_PASSWORD=secret
    - ICECAST_PASSWORD=secret
    - ICECAST_RELAY_PASSWORD=secret
    - ICECAST_HOSTNAME=icecast
    expose:
    - 8000
    image: moul/icecast
    ports:
    - 8000:8000

  # Streaming services: hls (nginx)
  hls:
    container_name: hls
    expose:
    - "80"
    image: nginx:alpine
    networks:
    - default
    ports:
    - 8080:8080/tcp
    restart: unless-stopped
    volumes:
    - ./example/nginx/:/etc/nginx/conf.d/:ro
    - data_hls:/hls:ro

  # Monitoring
  grafana:
    container_name: grafana
    depends_on:
    - prometheus
    environment:
    - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
    - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    - GF_USERS_ALLOW_SIGN_UP=false
    - GF_LOG_LEVEL=warn
    image: grafana/grafana:latest
    labels:
      org.label-schema.group: "monitoring"
    networks:
    - default
    ports:
    - 3000:3000/tcp
    restart: unless-stopped
    volumes:
    - ./example/grafana/provisioning:/etc/grafana/provisioning:ro
    - data_grafana:/var/lib/grafana
  prometheus:
    command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--storage.tsdb.path=/prometheus'
    - '--web.console.libraries=/etc/prometheus/console_libraries'
    - '--web.console.templates=/etc/prometheus/consoles'
    - '--storage.tsdb.retention.time=200h'
    - '--web.enable-lifecycle'
    - '--log.level=warn'
    container_name: prometheus
    image: prom/prometheus:latest
    labels:
      org.label-schema.group: "monitoring"
    networks:
    - default
    restart: unless-stopped
    ports:
    - 9090:9090/tcp
    volumes:
    - ./example/prometheus/:/etc/prometheus/:ro
    - data_prometheus:/prometheus

  # Alerting
  # alertmanager:
  #   command:
  #   - '--config.file=/etc/alertmanager/config.yml'
  #   - '--storage.path=/alertmanager'
  #   - '--log.level=warn'
  #   container_name: alertmanager
  #   depends_on:
  #   - prometheus
  #   expose:
  #   - 9093:9093/tcp
  #   image: prom/alertmanager:latest
  #   labels:
  #     org.label-schema.group: "monitoring"
  #   networks:
  #   - default
  #   restart: unless-stopped
  #   volumes:
  #   - ./example/alertmanager:/etc/alertmanager

  # Container metrics
  # cadvisor:
  #   container_name: cadvisor
  #   depends_on:
  #   - redis
  #   image: gcr.io/cadvisor/cadvisor:latest
  #   ports:
  #   - 8081:8080/tcp
  #   volumes:
  #   - /:/rootfs:ro
  #   - /var/run:/var/run:rw
  #   - /sys:/sys:ro
  #   - /var/lib/docker/:/var/lib/docker:ro
  # redis:
  #   container_name: redis
  #   image: redis:latest
  #   ports:
  #   - 6379:6379

volumes:
  data_grafana: {}
  data_hls: {}
  data_liquidsoap: {}
  data_prometheus: {}
